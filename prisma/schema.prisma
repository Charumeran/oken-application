generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  companyName String   @map("company_name")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  orders      Order[]

  @@index([username])
  @@map("users")
}

model Category {
  id           String     @id @default(uuid())
  name         String     @unique
  displayOrder Int        @default(0) @map("display_order")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  materials    Material[]

  @@map("categories")
}

model Material {
  id           String        @id @default(uuid())
  materialCode String        @unique @map("material_code")
  name         String
  categoryId   String        @map("category_id")
  size         String?
  type         String        @default("標準")
  weightKg     Float         @map("weight_kg")
  isActive     Boolean       @default(true) @map("is_active")
  notes        String?
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  category     Category      @relation(fields: [categoryId], references: [id])
  orderDetails OrderDetail[]

  @@index([categoryId])
  @@index([name])
  @@map("materials")
}

model Order {
  id             String        @id @default(uuid())
  orderNumber    String        @unique @map("order_number")
  projectName    String        @map("project_name")
  personInCharge String?       @map("person_in_charge")
  orderDate      DateTime      @map("order_date")
  deliveryDate   DateTime?     @map("delivery_date")
  status         String        @default("draft")
  notes          String?
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  contactInfo    String?       @map("contact_info")
  loadingDate    DateTime?     @map("loading_date")
  userId         String        @map("user_id")
  orderDetails   OrderDetail[]
  user           User          @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([orderDate])
  @@index([status])
  @@map("orders")
}

model OrderDetail {
  id            String   @id @default(uuid())
  orderId       String   @map("order_id")
  materialId    String   @map("material_id")
  quantity      Float
  totalWeightKg Float?   @map("total_weight_kg")
  notes         String?
  createdAt     DateTime @default(now()) @map("created_at")
  material      Material @relation(fields: [materialId], references: [id])
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@index([materialId])
  @@map("order_details")
}
